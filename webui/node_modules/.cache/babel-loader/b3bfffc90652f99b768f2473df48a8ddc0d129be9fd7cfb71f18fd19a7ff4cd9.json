{"ast":null,"code":"var _jsxFileName = \"/Users/krishdembla/Desktop/poker-debt-app/webui/src/context/WebSocketContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketContext = /*#__PURE__*/createContext();\nexport const WebSocketProvider = ({\n  children\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [currentGameId, setCurrentGameId] = useState(null);\n  const wsRef = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const reconnectAttempts = useRef(0);\n  const maxReconnectAttempts = 5;\n  const connect = () => {\n    const token = localStorage.getItem('poker_token');\n    if (!token) return;\n    const wsUrl = process.env.REACT_APP_WS_URL || 'ws://localhost:5050';\n    wsRef.current = new WebSocket(wsUrl);\n    wsRef.current.onopen = () => {\n      console.log('WebSocket connected');\n      setIsConnected(true);\n      reconnectAttempts.current = 0;\n\n      // Authenticate the connection\n      wsRef.current.send(JSON.stringify({\n        type: 'auth',\n        token\n      }));\n    };\n    wsRef.current.onclose = () => {\n      console.log('WebSocket disconnected');\n      setIsConnected(false);\n\n      // Attempt to reconnect\n      if (reconnectAttempts.current < maxReconnectAttempts) {\n        reconnectAttempts.current++;\n        const delay = Math.min(1000 * Math.pow(2, reconnectAttempts.current), 10000);\n        reconnectTimeoutRef.current = setTimeout(() => {\n          console.log(`Attempting to reconnect (${reconnectAttempts.current}/${maxReconnectAttempts})`);\n          connect();\n        }, delay);\n      }\n    };\n    wsRef.current.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n  };\n  const joinGame = gameId => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify({\n        type: 'join_game',\n        gameId\n      }));\n      setCurrentGameId(gameId);\n    }\n  };\n  const leaveGame = () => {\n    setCurrentGameId(null);\n  };\n  const sendMessage = message => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify(message));\n    }\n  };\n  useEffect(() => {\n    connect();\n    return () => {\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n    };\n  }, []);\n  const value = {\n    isConnected,\n    currentGameId,\n    joinGame,\n    leaveGame,\n    sendMessage,\n    ws: wsRef.current\n  };\n  return /*#__PURE__*/_jsxDEV(WebSocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketProvider, \"PRbudKAfJaBcisdVLRONj64XMTU=\");\n_c = WebSocketProvider;\nexport const useWebSocket = () => {\n  _s2();\n  const context = useContext(WebSocketContext);\n  if (!context) {\n    throw new Error('useWebSocket must be used within a WebSocketProvider');\n  }\n  return context;\n};\n_s2(useWebSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"WebSocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useRef","useState","jsxDEV","_jsxDEV","WebSocketContext","WebSocketProvider","children","_s","isConnected","setIsConnected","currentGameId","setCurrentGameId","wsRef","reconnectTimeoutRef","reconnectAttempts","maxReconnectAttempts","connect","token","localStorage","getItem","wsUrl","process","env","REACT_APP_WS_URL","current","WebSocket","onopen","console","log","send","JSON","stringify","type","onclose","delay","Math","min","pow","setTimeout","onerror","error","joinGame","gameId","readyState","OPEN","leaveGame","sendMessage","message","clearTimeout","close","value","ws","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWebSocket","_s2","context","Error","$RefreshReg$"],"sources":["/Users/krishdembla/Desktop/poker-debt-app/webui/src/context/WebSocketContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useRef, useState } from 'react';\n\nconst WebSocketContext = createContext();\n\nexport const WebSocketProvider = ({ children }) => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [currentGameId, setCurrentGameId] = useState(null);\n  const wsRef = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const reconnectAttempts = useRef(0);\n  const maxReconnectAttempts = 5;\n\n  const connect = () => {\n    const token = localStorage.getItem('poker_token');\n    if (!token) return;\n\n    const wsUrl = process.env.REACT_APP_WS_URL || 'ws://localhost:5050';\n    wsRef.current = new WebSocket(wsUrl);\n\n    wsRef.current.onopen = () => {\n      console.log('WebSocket connected');\n      setIsConnected(true);\n      reconnectAttempts.current = 0;\n      \n      // Authenticate the connection\n      wsRef.current.send(JSON.stringify({\n        type: 'auth',\n        token\n      }));\n    };\n\n    wsRef.current.onclose = () => {\n      console.log('WebSocket disconnected');\n      setIsConnected(false);\n      \n      // Attempt to reconnect\n      if (reconnectAttempts.current < maxReconnectAttempts) {\n        reconnectAttempts.current++;\n        const delay = Math.min(1000 * Math.pow(2, reconnectAttempts.current), 10000);\n        \n        reconnectTimeoutRef.current = setTimeout(() => {\n          console.log(`Attempting to reconnect (${reconnectAttempts.current}/${maxReconnectAttempts})`);\n          connect();\n        }, delay);\n      }\n    };\n\n    wsRef.current.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n  };\n\n  const joinGame = (gameId) => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify({\n        type: 'join_game',\n        gameId\n      }));\n      setCurrentGameId(gameId);\n    }\n  };\n\n  const leaveGame = () => {\n    setCurrentGameId(null);\n  };\n\n  const sendMessage = (message) => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify(message));\n    }\n  };\n\n  useEffect(() => {\n    connect();\n\n    return () => {\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n    };\n  }, []);\n\n  const value = {\n    isConnected,\n    currentGameId,\n    joinGame,\n    leaveGame,\n    sendMessage,\n    ws: wsRef.current\n  };\n\n  return (\n    <WebSocketContext.Provider value={value}>\n      {children}\n    </WebSocketContext.Provider>\n  );\n};\n\nexport const useWebSocket = () => {\n  const context = useContext(WebSocketContext);\n  if (!context) {\n    throw new Error('useWebSocket must be used within a WebSocketProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}