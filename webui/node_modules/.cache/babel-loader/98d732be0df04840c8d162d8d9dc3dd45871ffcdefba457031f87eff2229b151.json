{"ast":null,"code":"var _jsxFileName = \"/Users/krishdembla/Desktop/poker-debt-app/webui/src/components/ConnectionStatus.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionStatus = () => {\n  _s();\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const [isWebSocketConnected, setIsWebSocketConnected] = useState(false);\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  // Listen for WebSocket connection status\n  useEffect(() => {\n    const checkWebSocketStatus = () => {\n      // This would be connected to the WebSocket context\n      // For now, we'll just show the network status\n    };\n    const interval = setInterval(checkWebSocketStatus, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  if (isOnline) {\n    return null; // Don't show anything when online\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: '10px',\n      right: '10px',\n      backgroundColor: '#f44336',\n      color: 'white',\n      padding: '8px 12px',\n      borderRadius: '4px',\n      fontSize: '12px',\n      zIndex: 1000,\n      boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\n    },\n    children: \"\\u26A0\\uFE0F Offline Mode\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionStatus, \"vWqTlB87p3JSpPZ1xmIghFPuY7M=\");\n_c = ConnectionStatus;\nexport default ConnectionStatus;\nvar _c;\n$RefreshReg$(_c, \"ConnectionStatus\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ConnectionStatus","_s","isOnline","setIsOnline","navigator","onLine","isWebSocketConnected","setIsWebSocketConnected","handleOnline","handleOffline","window","addEventListener","removeEventListener","checkWebSocketStatus","interval","setInterval","clearInterval","style","position","top","right","backgroundColor","color","padding","borderRadius","fontSize","zIndex","boxShadow","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/krishdembla/Desktop/poker-debt-app/webui/src/components/ConnectionStatus.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ConnectionStatus = () => {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const [isWebSocketConnected, setIsWebSocketConnected] = useState(false);\n\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  // Listen for WebSocket connection status\n  useEffect(() => {\n    const checkWebSocketStatus = () => {\n      // This would be connected to the WebSocket context\n      // For now, we'll just show the network status\n    };\n\n    const interval = setInterval(checkWebSocketStatus, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  if (isOnline) {\n    return null; // Don't show anything when online\n  }\n\n  return (\n    <div style={{\n      position: 'fixed',\n      top: '10px',\n      right: '10px',\n      backgroundColor: '#f44336',\n      color: 'white',\n      padding: '8px 12px',\n      borderRadius: '4px',\n      fontSize: '12px',\n      zIndex: 1000,\n      boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\n    }}>\n      ⚠️ Offline Mode\n    </div>\n  );\n};\n\nexport default ConnectionStatus; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAACQ,SAAS,CAACC,MAAM,CAAC;EAC1D,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEvEC,SAAS,CAAC,MAAM;IACd,MAAMW,YAAY,GAAGA,CAAA,KAAML,WAAW,CAAC,IAAI,CAAC;IAC5C,MAAMM,aAAa,GAAGA,CAAA,KAAMN,WAAW,CAAC,KAAK,CAAC;IAE9CO,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IAC/CE,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEF,aAAa,CAAC;IAEjD,OAAO,MAAM;MACXC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;MAClDE,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEH,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAZ,SAAS,CAAC,MAAM;IACd,MAAMgB,oBAAoB,GAAGA,CAAA,KAAM;MACjC;MACA;IAAA,CACD;IAED,MAAMC,QAAQ,GAAGC,WAAW,CAACF,oBAAoB,EAAE,IAAI,CAAC;IACxD,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIZ,QAAQ,EAAE;IACZ,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,oBACEH,OAAA;IAAKkB,KAAK,EAAE;MACVC,QAAQ,EAAE,OAAO;MACjBC,GAAG,EAAE,MAAM;MACXC,KAAK,EAAE,MAAM;MACbC,eAAe,EAAE,SAAS;MAC1BC,KAAK,EAAE,OAAO;MACdC,OAAO,EAAE,UAAU;MACnBC,YAAY,EAAE,KAAK;MACnBC,QAAQ,EAAE,MAAM;MAChBC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE;IACb,CAAE;IAAAC,QAAA,EAAC;EAEH;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAhDID,gBAAgB;AAAAiC,EAAA,GAAhBjC,gBAAgB;AAkDtB,eAAeA,gBAAgB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}